// For format details, see containers.dev
{
  "build": {
      "dockerfile": "./Dockerfile",
      "context": "."
  },
  "runArgs": ["--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],

  "features": {
      "ghcr.io/devcontainers/features/common-utils:1": {
          "installZsh": "true",
          "username": "vscode",
          "uid": "1000",
          "gid": "1000",
          "upgradePackages": "true"
      },
      "ghcr.io/devcontainers/features/rust:1": "latest",
      "ghcr.io/devcontainers/features/git:1": {
        "version": "latest",
        "ppa": "false"
      },
      "./spin": "latest"
  },

// Configure tool-specific properties.
"customizations": {
  // Configure properties specific to VS Code.
  "vscode": {
    // Set *default* container specific settings.json values on container create.
    "settings": {
      "lldb.executable": "/usr/bin/lldb",
      // VS Code don't watch files under ./target
      "files.watcherExclude": {
        "**/target/**": true
      },
      "rust-analyzer.checkOnSave.command": "clippy"
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
      "vadimcn.vscode-lldb",
      "mutantdino.resourcemonitor",
      "rust-lang.rust-analyzer",
      "tamasfe.even-better-toml",
      "fermyon.autobindle",
      "golang.Go",
      "grain-lang.vscode-grain",
      "serayuzgur.crates"
    ]
  },
  "codespaces": {
    "openFiles": [
      "quickstart-codespaces.md"
    ]
  }
},
// Use 'forwardPorts' to make a list of ports inside the container available locally.
"portsAttributes": {
  "3000": {
    "label": "Application",
    "onAutoForward": "openPreview"
  }
},
"forwardPorts": [3000],

// Use 'postCreateCommand' to run commands after the container is created.
// "postCreateCommand": "rustc --version",

// Use 'postCreateCommand' to run commands after the container is created.
// Here we install gopls in case you are using golang with spin
"postCreateCommand": "go install -v golang.org/x/tools/gopls@latest",

// Use 'postAttachCommand' to to run each time your client has successfully attached to the container
// For Rust templates you need the wasm32-wasi target. You can add it using rustup:rustup target add wasm32-wasi.
"postAttachCommand": "rustup target add wasm32-wasi",

// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
"remoteUser": "vscode"
}
